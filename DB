CREATE TABLE LOG_DATA (
	USER_UUID BIGINT NOT NULL,
	POINT_UUID INT NOT NULL,
	POINT_VALUE INT NOT NULL,
	CREATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE SCORE_DATA(
	POINT_UUID INT AUTO_INCREMENT,
	POINT_TYPE INT NOT NULL,
	POINT_MEMO VARCHAR(200) NOT NULL,
	PRIMARY KEY (POINT_UUID)
);

CREATE TABLE STUDENT_DATA(
	USER_UUID BIGINT AUTO_INCREMENT,
	USER_NAME VARCHAR(20) NOT NULL,
	USER_SCHOOL_NUMBER VARCHAR(10) NOT NULL,
	USER_SCHOOL_ROOM_NUMBER VARCHAR(10) NOT NULL,
	PRIMARY KEY (USER_UUID)
);

CREATE TABLE TEACHER_DATA(
	TEACHER_UUID BIGINT  AUTO_INCREMENT,
	USER_NAME VARCHAR(20) NOT NULL,
	PERMISSION_TYPE INT NOT NULL,
	ID VARCHAR(100) NOT NULL,
	PASSWORD VARCHAR(1000) NOT NULL
	PRIMARY KEY (TEACHER_UUID)
);

CREATE TABLE PERMISSION_DATA(
	PERMISSION_TYPE INT NOT NULL,
	STUDENT_MANAGE INT NOT NULL,
	SCORE_MANAGE INT NOT NULL
);

PERMISSION_TYPE
	0 : 관리자
	1 : 사감 선생님
	2 : 일반 선생님
(나머지 값들) : 1이면 가능, 0이면 불가능

//LOGIN
SELECT * FROM TEACHER_DATA JOIN PERMISSION_DATA ON PERMISSION_DATA.PERMISSION_TYPE = TEACHER_DATA.PERMISSION_TYPE WHERE TEACHER_DATA.ID = (ID) AND TEACHER_DATA.PASSWORD = (PASSWORD)

//특정 학생의 점수 기록 가져오기
SELECT * FROM LOG_DATA JOIN SCORE_DATA ON SCORE_DATA.POINT_UUID = LOG_DATA.POINT_UUID WHERE SCORE_DATA.USER_UUID = (UUID)

//전체 학생 정보 전송
SELECT * FROM 	